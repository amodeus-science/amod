<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ch.ethz.idsc</groupId>
	<artifactId>amod</artifactId>
	<version>1.2.3</version>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<skipTests>false</skipTests>
	</properties>

	<dependencies>
		<dependency>
			<groupId>ch.ethz.idsc</groupId>
			<artifactId>amodeus</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>ch.ethz.idsc</groupId>
			<artifactId>tensor</artifactId>
			<version>0.5.6</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>4.1.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>tensor-mvn-repo</id>
			<url>https://raw.github.com/idsc-frazzoli/tensor/mvn-repo/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>amodeus-mvn-repo</id>
			<url>https://raw.github.com/idsc-frazzoli/amodeus/mvn-repo/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<configuration>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<transformers>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<mainClass>amod.demo.ScenarioStandalone</mainClass>
							<manifestEntries>
								<Main-Class>amod.demo.ScenarioStandalone</Main-Class>
								<Specification-Title>Java Advanced Imaging Image I/O Tools</Specification-Title>
								<Specification-Version>1.1</Specification-Version>
								<Specification-Vendor>Sun Microsystems, Inc.</Specification-Vendor>
								<Implementation-Title>com.sun.media.imageio</Implementation-Title>
								<Implementation-Version>1.1</Implementation-Version>
								<Implementation-Vendor>Sun Microsystems, Inc.</Implementation-Vendor>
								<Extension-Name>com.sun.media.imageio</Extension-Name>
							</manifestEntries>
						</transformer>
						<!-- This bit sets the main class for the executable jar as you otherwise -->
						<!-- would with the assembly plugin -->
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<manifestEntries>
								<Main-Class>amod.demo.ScenarioStandalone</Main-Class>
							</manifestEntries>
						</transformer>
						<!-- This bit merges the various GeoTools META-INF/services files -->
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
					</transformers>
					<!-- Exclude all signature files to avoid java.lang.SecurityException: Invalid signature file digest -->
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- TODO: ETHZ file servers do not like wget's default headers, and this plugin does not support custom headers. Need to find a workaround.
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>1.4.0</version>
				<executions>
					<execution>
						<id>install-berlin</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://www.ethz.ch/content/dam/ethz/special-interest/mavt/dynamic-systems-n-control/idsc-dam/Research_Frazzoli/BerlinAMoDeus.zip</url>
							<unpack>true</unpack>
							<outputDirectory>${project.build.directory}/berlin</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>install-san-fransisco</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://www.ethz.ch/content/dam/ethz/special-interest/mavt/dynamic-systems-n-control/idsc-dam/Research_Frazzoli/AMoDeusScenarioSanFrancisco.zip</url>
							<unpack>true</unpack>
							<outputDirectory>${project.build.directory}/sanfransisco</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>install-santiago</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://www.ethz.ch/content/dam/ethz/special-interest/mavt/dynamic-systems-n-control/idsc-dam/Research_Frazzoli/SantiagoAMoDeus.zip</url>
							<unpack>true</unpack>
							<outputDirectory>${project.build.directory}/santiago</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>install-tel-aviv</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://www.ethz.ch/content/dam/ethz/special-interest/mavt/dynamic-systems-n-control/idsc-dam/Research_Frazzoli/TelavivAMoDeus.zip</url>
							<unpack>true</unpack>
							<outputDirectory>${project.build.directory}/telaviv</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			-->
		</plugins>
	</build>

</project>